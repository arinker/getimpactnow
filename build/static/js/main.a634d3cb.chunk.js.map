{"version":3,"sources":["../.dfx/local/canisters/issue/issue.js","../.dfx/local/canisters/issue/issue.did.js","components/atoms/menu-headline.tsx","components/atoms/menu-item.tsx","components/atoms/avatar.tsx","components/organisms/sidebar.tsx","components/organisms/top-bar.tsx","components/atoms/card.tsx","components/atoms/fab.tsx","modules/issues/add-issue-modal.tsx","modules/issues/add-issue-fab.tsx","pages/home/index.tsx","pages/home/issue.tsx","index.tsx"],"names":["ic","agent","makeActorFactory","IDL","ImmutableIssue","Record","Nat","Text","Service","Func","Vec","canisterId","MenuHeadline","children","headingProps","Heading","as","size","color","MenuItem","Avatar","name","src","SideBar","colors","useTheme","Flex","flexDir","height","borderRight","blackAlpha","background","p","Stack","flex","spacing","display","TopBar","isInline","paddingX","paddingY","backgroundColor","fontWeight","Card","boxProps","Box","borderRadius","overflow","padding","textAlign","IconButton","icon","aria-label","Fab","buttonProps","Button","width","boxShadow","AddIssueModal","isOpen","onClose","onUpdate","formik","useFormik","initialValues","description","onSubmit","a","get_impact_now","addIssue","Modal","handleSubmit","Input","type","value","values","onChange","handleChange","variantColor","mr","onClick","isDisabled","isSubmitting","AddIssueFab","useDisclosure","onOpen","position","bottom","right","Icon","Home","React","useState","issues","setIssues","console","log","updateIssues","useCallback","getIssues","useEffect","Grid","templateColumns","gap","map","issue","to","id","IssuePage","issueId","useParams","setIssue","getIssue","parseInt","i","load","GetImpactNow","ThemeProvider","theme","CSSReset","exact","path","render","document","getElementById"],"mappings":"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","file":"static/js/main.a634d3cb.chunk.js","sourcesContent":["import actorInterface from \"ic:idl/issue\";\n\nexport default ic.agent.makeActorFactory(actorInterface)({\n  canisterId: \"cxeji-wacaa-aaaaa-aaaaa-aaaaa-aaaaa-aaaaa-q\",\n});\n","export default ({ IDL }) => {\n  const ImmutableIssue = IDL.Record({\n    'id' : IDL.Nat,\n    'description' : IDL.Text,\n    'nextDebateId' : IDL.Nat,\n  });\n  return IDL.Service({\n    'addDebate' : IDL.Func([IDL.Nat, IDL.Text], [], []),\n    'addIssue' : IDL.Func([IDL.Text], [], []),\n    'getIssues' : IDL.Func([], [IDL.Vec(ImmutableIssue)], ['query']),\n  });\n};","import React from \"react\";\nimport Heading, { HeadingProps } from \"@chakra-ui/core/dist/Heading\";\n\nexport const MenuHeadline: React.FC<HeadingProps> = ({\n  children,\n  ...headingProps\n}) => {\n  return (\n    <Heading as=\"h2\" size=\"lg\" color=\"yellow\" {...headingProps}>\n      {children}\n    </Heading>\n  );\n};\n","import React from \"react\";\nimport Heading, { HeadingProps } from \"@chakra-ui/core/dist/Heading\";\n\nexport const MenuItem: React.FC<HeadingProps> = ({\n  children,\n  ...headingProps\n}) => {\n  return (\n    <Heading as=\"h3\" size=\"sm\" {...headingProps}>\n      {children}\n    </Heading>\n  );\n};\n","import React from \"react\";\nimport ChakraAvatar from \"@chakra-ui/core/dist/Avatar\";\n\nexport const Avatar: React.FC = () => {\n  return (\n    <ChakraAvatar name=\"Christian Nwamba\" src=\"https://bit.ly/code-beast\" />\n  );\n};\n","import React from \"react\";\nimport Flex from \"@chakra-ui/core/dist/Flex\";\nimport Box from \"@chakra-ui/core/dist/Box\";\nimport Text from \"@chakra-ui/core/dist/Text\";\nimport { MenuHeadline } from \"../atoms/menu-headline\";\nimport Stack from \"@chakra-ui/core/dist/Stack\";\nimport { MenuItem } from \"../atoms/menu-item\";\nimport { Avatar } from \"../atoms/avatar\";\nimport { useTheme } from \"@chakra-ui/core\";\n\nexport const SideBar: React.FC = () => {\n  const { colors } = useTheme();\n  return (\n    <Flex\n      flexDir=\"column\"\n      height=\"100%\"\n      borderRight={`1px solid ${colors.blackAlpha[400]}`}\n    >\n      <Flex background=\"teal\" p=\"1rem\" flexDir=\"column\">\n        <Avatar />\n        <Text>user@email.de</Text>\n      </Flex>\n      <Stack p=\"1rem\" flex=\"1\" background=\"blackAlpha.600\" spacing=\"1rem\">\n        <Flex flexDir=\"column\">\n          <MenuHeadline>Information</MenuHeadline>\n          <MenuItem>Upcoming</MenuItem>\n          <MenuItem>Needs & Trends</MenuItem>\n        </Flex>\n        <Flex flexDir=\"column\">\n          <MenuHeadline>Ideas</MenuHeadline>\n          <MenuItem>Set the agenda</MenuItem>\n          <MenuItem>Work on Solutions</MenuItem>\n          <MenuItem>Share your Expertise</MenuItem>\n        </Flex>\n        <Flex flexDir=\"column\">\n          <MenuHeadline>Proposals</MenuHeadline>\n          <MenuItem>Debate with other People</MenuItem>\n          <MenuItem>Work on specific Proposals</MenuItem>\n          <MenuItem>Scruitinise Options</MenuItem>\n        </Flex>\n        <Flex flexDir=\"column\">\n          <MenuHeadline>Decisions</MenuHeadline>\n          <MenuItem>Vote</MenuItem>\n          <MenuItem>Watch & Rate</MenuItem>\n        </Flex>\n      </Stack>\n      <Flex p=\"1rem\" flexDir=\"column\">\n        <Text>Government</Text>\n        <Stack display=\"flex\" flexDir=\"row\" spacing=\"0.5rem\">\n          <Text>Local</Text>\n          <Text>Regional</Text>\n          <Text>Natianal</Text>\n        </Stack>\n      </Flex>\n    </Flex>\n  );\n};\n","import React from \"react\";\nimport Flex from \"@chakra-ui/core/dist/Flex\";\nimport Stack from \"@chakra-ui/core/dist/Stack\";\nimport Text from \"@chakra-ui/core/dist/Text\";\n\nexport const TopBar: React.FC = () => {\n  return (\n    <Stack\n      isInline\n      spacing=\"0.5rem\"\n      paddingX=\"1rem\"\n      paddingY=\"0.5rem\"\n      height=\"2rem\"\n      backgroundColor=\"blackAlpha.700\"\n      color=\"white\"\n    >\n      <Text fontWeight=\"bold\">Policy Fields:</Text>\n      <Text>Overview</Text>\n      <Text>Social</Text>\n      <Text>Health</Text>\n      <Text>Finance</Text>\n      <Text>Infrastructure</Text>\n      <Text>Security</Text>\n      <Text>Data</Text>\n      <Text>Military</Text>\n      <Text>Justice</Text>\n    </Stack>\n  );\n};\n","import React from \"react\";\nimport Box, { BoxProps } from \"@chakra-ui/core/dist/Box\";\nimport IconButton from \"@chakra-ui/core/dist/IconButton\";\nimport { Stack } from \"@chakra-ui/core\";\n\nexport const Card: React.FC<BoxProps> = ({\n  children,\n  backgroundColor,\n  ...boxProps\n}) => {\n  return (\n    <Box\n      display=\"flex\"\n      flexDir=\"column\"\n      borderRadius=\"0.25rem\"\n      height=\"12rem\"\n      overflow=\"hidden\"\n      {...boxProps}\n    >\n      <Box\n        flex=\"1\"\n        backgroundColor={backgroundColor}\n        color=\"white\"\n        padding=\"1rem\"\n        textAlign=\"end\"\n        fontWeight=\"bold\"\n      >\n        {children}\n      </Box>\n      <Stack isInline spacing=\"0.5rem\" padding=\"0.5rem\" backgroundColor=\"white\">\n        <IconButton icon=\"copy\" aria-label=\"copy\" size=\"xs\" />\n        <IconButton icon=\"edit\" aria-label=\"edit\" size=\"xs\" />\n        <IconButton icon=\"info\" aria-label=\"info\" size=\"xs\" />\n      </Stack>\n    </Box>\n  );\n};\n","import React from \"react\";\nimport { Button, ButtonProps, Icon } from \"@chakra-ui/core\";\n\nexport const Fab: React.FC<ButtonProps> = ({ children, ...buttonProps }) => {\n  return (\n    <Button\n      width=\"3.5rem\"\n      height=\"3.5rem\"\n      borderRadius=\"50%\"\n      boxShadow=\"0px 0px 5px 0px rgba(1,1,1,0.25)\"\n      backgroundColor=\"teal.600\"\n      color=\"white\"\n      {...buttonProps}\n    >\n      {children}\n    </Button>\n  );\n};\n","// @ts-ignore\nimport get_impact_now from \"ic:canisters/issue\";\nimport React from \"react\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalCloseButton,\n  ModalBody,\n  ModalFooter,\n} from \"@chakra-ui/core/dist/Modal\";\nimport Button from \"@chakra-ui/core/dist/Button\";\nimport { useFormik } from \"formik\";\nimport Input from \"@chakra-ui/core/dist/Input\";\n\ninterface AddIssueModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n  onUpdate: () => void;\n}\n\nexport const AddIssueModal: React.FC<AddIssueModalProps> = ({\n  isOpen,\n  onClose,\n  onUpdate,\n}) => {\n  const formik = useFormik({\n    initialValues: {\n      description: \"\",\n    },\n    onSubmit: async ({ description }) => {\n      await get_impact_now.addIssue(description);\n      onUpdate();\n      onClose();\n    },\n  });\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClose}>\n      <ModalOverlay />\n      <ModalContent>\n        <form onSubmit={formik.handleSubmit}>\n          <ModalHeader>Create Issue</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            <Input\n              type=\"input\"\n              name=\"description\"\n              value={formik.values.description}\n              onChange={formik.handleChange}\n            />\n          </ModalBody>\n\n          <ModalFooter>\n            <Button variantColor=\"orange\" mr={3} onClick={onClose}>\n              Cancel\n            </Button>\n            <Button\n              variantColor=\"teal\"\n              type=\"submit\"\n              isDisabled={formik.isSubmitting}\n            >\n              Save\n            </Button>\n          </ModalFooter>\n        </form>\n      </ModalContent>\n    </Modal>\n  );\n};\n","import React from \"react\";\nimport { Fab } from \"../../components/atoms/fab\";\nimport Icon from \"@chakra-ui/core/dist/Icon\";\nimport useDisclosure from \"@chakra-ui/core/dist/useDisclosure\";\nimport { AddIssueModal } from \"./add-issue-modal\";\n\ninterface AddIssueFabProps {\n  onUpdate: () => void;\n}\n\nexport const AddIssueFab: React.FC<AddIssueFabProps> = ({ onUpdate }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  return (\n    <>\n      <Fab position=\"absolute\" bottom=\"3rem\" right=\"3rem\" onClick={onOpen}>\n        <Icon name=\"add\" />\n      </Fab>\n      <AddIssueModal isOpen={isOpen} onClose={onClose} onUpdate={onUpdate} />\n    </>\n  );\n};\n","// @ts-ignore\nimport get_impact_now from \"ic:canisters/issue\";\nimport React from \"react\";\nimport Flex from \"@chakra-ui/core/dist/Flex\";\nimport { SideBar } from \"../../components/organisms/sidebar\";\nimport { TopBar } from \"../../components/organisms/top-bar\";\nimport { Card } from \"../../components/atoms/card\";\nimport Grid from \"@chakra-ui/core/dist/Grid\";\nimport { AddIssueFab } from \"../../modules/issues/add-issue-fab\";\nimport { Link } from \"react-router-dom\";\n\nexport const Home: React.FC = () => {\n  const [issues, setIssues] = React.useState<\n    Array<{ id: string; description: string }>\n  >([]);\n  console.log(\">> \", { issues });\n\n  const updateIssues = React.useCallback(async () => {\n    const issues = await get_impact_now.getIssues();\n    setIssues(issues);\n  }, []);\n\n  React.useEffect(() => {\n    updateIssues();\n  }, [updateIssues]);\n\n  return (\n    <Flex height=\"100vh\" width=\"100vw\">\n      <SideBar />\n      <Flex flexDir=\"column\" flex=\"1\" backgroundColor=\"blackAlpha.300\">\n        <TopBar />\n        <Grid\n          templateColumns={[\n            \"repeat(1, 1fr)\",\n            \"repeat(2, 1fr)\",\n            \"repeat(3, 1fr)\",\n          ]}\n          gap=\"2\"\n          padding=\"1rem\"\n        >\n          {issues.map((issue) => (\n            <Link to={`/issues/${issue.id}`}>\n              <Card backgroundColor=\"green.800\">{issue.description}</Card>\n            </Link>\n          ))}\n        </Grid>\n      </Flex>\n      <AddIssueFab onUpdate={updateIssues} />\n    </Flex>\n  );\n};\n","// @ts-ignore\nimport get_impact_now from \"ic:canisters/issue\";\nimport React from \"react\";\nimport Flex from \"@chakra-ui/core/dist/Flex\";\nimport { SideBar } from \"../../components/organisms/sidebar\";\nimport Box from \"@chakra-ui/core/dist/Box\";\nimport Text from \"@chakra-ui/core/dist/Text\";\nimport { useParams } from \"react-router-dom\";\n\nexport const IssuePage: React.FC = () => {\n  const { issueId } = useParams<{ issueId: string }>();\n  const [issue, setIssue] = React.useState();\n  console.log(\">> \", { issueId, issue });\n\n  React.useEffect(() => {\n    const load = async () => {\n      const i = await get_impact_now.getIssue(parseInt(issueId, 10));\n      if (i) {\n        setIssue(i);\n      }\n    };\n    load();\n  }, [issueId]);\n\n  return (\n    <Flex height=\"100vh\" width=\"100vw\">\n      <SideBar />\n      <Flex flexDir=\"column\" flex=\"1\" backgroundColor=\"blackAlpha.300\">\n        <Box>\n          <Text>Issue.id: {issueId}</Text>\n        </Box>\n      </Flex>\n    </Flex>\n  );\n};\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { render } from \"react-dom\";\nimport { ThemeProvider, theme, CSSReset } from \"@chakra-ui/core\";\nimport { Home } from \"./pages/home\";\nimport { IssuePage } from \"./pages/home/issue\";\nimport { RecoilRoot } from \"recoil\";\n\nconst GetImpactNow: React.FC = () => {\n  return (\n    <RecoilRoot>\n      <ThemeProvider theme={theme}>\n        <CSSReset />\n        <Router>\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/issues/:issueId\">\n              <IssuePage />\n            </Route>\n          </Switch>\n        </Router>\n      </ThemeProvider>\n    </RecoilRoot>\n  );\n};\n\nrender(<GetImpactNow />, document.getElementById(\"app\"));\n"],"sourceRoot":""}